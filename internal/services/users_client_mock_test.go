// Code generated by MockGen. DO NOT EDIT.
// Source: ./referrals.go
//
// Generated by this command:
//
//	mockgen -source=./referrals.go -destination=users_client_mock_test.go -package=services
//

// Package services is a generated GoMock package.
package services

import (
	context "context"
	reflect "reflect"

	grpc "github.com/DIMO-Network/users-api/pkg/grpc"
	gomock "go.uber.org/mock/gomock"
	grpc0 "google.golang.org/grpc"
)

// MockUsersClient is a mock of UsersClient interface.
type MockUsersClient struct {
	ctrl     *gomock.Controller
	recorder *MockUsersClientMockRecorder
}

// MockUsersClientMockRecorder is the mock recorder for MockUsersClient.
type MockUsersClientMockRecorder struct {
	mock *MockUsersClient
}

// NewMockUsersClient creates a new mock instance.
func NewMockUsersClient(ctrl *gomock.Controller) *MockUsersClient {
	mock := &MockUsersClient{ctrl: ctrl}
	mock.recorder = &MockUsersClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsersClient) EXPECT() *MockUsersClientMockRecorder {
	return m.recorder
}

// GetUsersByEthereumAddress mocks base method.
func (m *MockUsersClient) GetUsersByEthereumAddress(ctx context.Context, in *grpc.GetUsersByEthereumAddressRequest, opts ...grpc0.CallOption) (*grpc.GetUsersByEthereumAddressResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetUsersByEthereumAddress", varargs...)
	ret0, _ := ret[0].(*grpc.GetUsersByEthereumAddressResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsersByEthereumAddress indicates an expected call of GetUsersByEthereumAddress.
func (mr *MockUsersClientMockRecorder) GetUsersByEthereumAddress(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsersByEthereumAddress", reflect.TypeOf((*MockUsersClient)(nil).GetUsersByEthereumAddress), varargs...)
}
