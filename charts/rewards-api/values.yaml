replicaCount: 1
image:
  repository: dimozone/rewards-api
  pullPolicy: IfNotPresent
  tag: 08d3128
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
serviceAccount:
  create: true
  annotations: {}
  name: ''
podAnnotations: {}
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1001
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - all
cronJob:
  enabled: true
  schedule: 0 5 * * 1
env:
  ENVIRONMENT: dev
  PORT: '8080'
  LOG_LEVEL: info
  DB_PORT: '5432'
  DB_NAME: rewards_api
  DB_MAX_OPEN_CONNECTIONS: '10'
  DB_MAX_IDLE_CONNECTIONS: '3'
  SERVICE_NAME: rewards-api
  GRPC_PORT: '8086'
  JWT_KEY_SET_URL: https://auth.dev.dimo.zone/keys
  DEPLOYMENT_BASE_URL: https://rewards-api.dev.dimo.zone
  DEVICE_DATA_INDEX_NAME: device-status-dev*
  AWS_REGION: us-east-2
  DEVICES_API_GRPC_ADDR: devices-api-dev:8086
  USERS_API_GRPC_ADDR: users-api-dev:8086
  DEFINITIONS_API_GRPC_ADDR: device-definitions-api-dev:8086
  META_TRANSACTION_SEND_TOPIC: topic.transaction.request.send
  META_TRANSACTION_STATUS_TOPIC: topic.transaction.request.status
  KAFKA_BROKERS: kafka-dev-dimo-kafka-kafka-brokers:9092
  CONSUMER_GROUP: rewards-api
  ISSUANCE_CONTRACT_ADDRESS: '0x0313C1508fd3fe5Ec7F8e2A9F9Bcd32f903c78e2'
  TRANSFER_BATCH_SIZE: 2
  FIRST_AUTOMATED_WEEK: 44
  TOKEN_ADDRESS: '0x80ee7ec4493a1d7975ab900f94db25ba7c688201'
  CONTRACT_EVENT_TOPIC: topic.contract.event
  REFERRAL_CONTRACT_ADDRESS: '0xfF358a3dB687d9E80435a642bB3Ba8E64D4359A6'
config:
  tokens:
    - chainId: 80001
      address: '0x80ee7ec4493a1d7975ab900f94db25ba7c688201'
      rpcUrl: $MUMBAI_RPC_URL
service:
  type: ClusterIP
  ports:
    mon-http:
      port: 8888
      targetPort: mon-http
      protocol: TCP
    http:
      port: 8080
      targetPort: http
      protocol: TCP
    grpc:
      port: 8086
      targetPort: grpc
      protocol: TCP
ports:
  - name: mon-http
    containerPort: 8888
    protocol: TCP
  - name: http
    containerPort: 8080
    protocol: TCP
  - name: grpc
    containerPort: 8086
    protocol: TCP
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/auth-tls-secret: ingress/cf-origin-ca
    nginx.ingress.kubernetes.io/auth-tls-verify-client: 'on'
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: https://app.dev.dimo.zone
    nginx.ingress.kubernetes.io/limit-rps: '3'
    external-dns.alpha.kubernetes.io/hostname: rewards-api.dev.dimo.zone
  hosts:
    - host: rewards-api.dev.dimo.zone
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
resources:
  limits:
    cpu: 250m
    memory: 256Mi
  requests:
    cpu: 50m
    memory: 128Mi
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
podDisruptionBudget:
  minAvailable: 0
kafka:
  clusterName: kafka-dev-dimo-kafka
serviceMonitor:
  enabled: false
  path: /metrics
  port: mon-http
  interval: 30s
