replicaCount: 1
image:
  repository: dimozone/rewards-api
  pullPolicy: IfNotPresent
  tag: c61bdf4
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
serviceAccount:
  create: true
  annotations: {}
  name: ''
podAnnotations: {}
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1001
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - all
rewardsCronJob:
  enabled: true
  schedule: 0 5 * * 1
referralsCronJob:
  enabled: true
  schedule: 0 8 * * 1
attestationsCronJob:
  enabled: true
  schedule: '* * 30 2 *'
env:
  ENVIRONMENT: dev
  PORT: '8080'
  LOG_LEVEL: info
  DB_PORT: '5432'
  DB_NAME: rewards_api
  DB_SSL_MODE: require
  DB_MAX_OPEN_CONNECTIONS: '10'
  DB_MAX_IDLE_CONNECTIONS: '3'
  GRPC_PORT: '8086'
  JWT_KEY_SET_URL: https://auth.dev.dimo.zone/keys
  AWS_REGION: us-east-2
  DEVICES_API_GRPC_ADDR: devices-api-dev:8086
  DEFINITIONS_API_GRPC_ADDR: device-definitions-api-dev:8086
  FETCH_API_GRPC_ADDR: fetch-api-dev:8086
  ATTESTATION_API_GRPC_ADDR: attestation-api-dev:8086
  META_TRANSACTION_SEND_TOPIC: topic.transaction.request.send
  META_TRANSACTION_STATUS_TOPIC: topic.transaction.request.status
  KAFKA_BROKERS: kafka-dev-dimo-kafka-kafka-brokers:9092
  CONSUMER_GROUP: rewards-api
  ISSUANCE_CONTRACT_ADDRESS: '0xd00e0e788028A8636509c50cF89Df1420b12a5c2'
  TRANSFER_BATCH_SIZE: 2
  FIRST_AUTOMATED_WEEK: 44
  CONTRACT_EVENT_TOPIC: topic.contract.event
  REFERRAL_CONTRACT_ADDRESS: '0x75CBdF0a2619DD4bE9a6C34F6D6F3aC27Fc92529'
  CLICKHOUSE_TCP_PORT: 9440
  CLICKHOUSE_DATABASE: dimo
  IDENTITY_QUERY_URL: http://identity-api-dev:8080/query
  ENABLE_STAKING: true
  DIMO_REGISTRY_CHAIN_ID: '80002'
  VEHICLE_NFT_CONTRACT_ADDRESS: '0x45fbCD3ef7361d156e8b16F5538AE36DEdf61Da8'
  VINVC_DATA_VERSION: vin/v1.0
  MOBILE_API_BASE_URL: https://dimo-app-backend-development.up.railway.app
  STORAGE_NODE_DEV_LICENSE: '0x52fD9Dc294066792785CcD85eFB9A0Bd48DE01E4'
service:
  type: ClusterIP
  ports:
    mon-http:
      port: 8888
      targetPort: mon-http
      protocol: TCP
    http:
      port: 8080
      targetPort: http
      protocol: TCP
    grpc:
      port: 8086
      targetPort: grpc
      protocol: TCP
ports:
  - name: mon-http
    containerPort: 8888
    protocol: TCP
  - name: http
    containerPort: 8080
    protocol: TCP
  - name: grpc
    containerPort: 8086
    protocol: TCP
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/auth-tls-secret: ingress/cf-origin-ca
    nginx.ingress.kubernetes.io/auth-tls-verify-client: 'on'
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: https://app.dev.dimo.zone
    nginx.ingress.kubernetes.io/limit-rps: '3'
    external-dns.alpha.kubernetes.io/hostname: rewards-api.dev.dimo.zone
  hosts:
    - host: rewards-api.dev.dimo.zone
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
resources:
  limits:
    cpu: 250m
    memory: 256Mi
  requests:
    cpu: 25m
    memory: 64Mi
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
podDisruptionBudget:
  minAvailable: 0
kafka:
  clusterName: kafka-dev-dimo-kafka
serviceMonitor:
  enabled: false
  path: /metrics
  port: mon-http
  interval: 30s
