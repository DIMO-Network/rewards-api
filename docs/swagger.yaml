basePath: /v1
definitions:
  decimal.Big:
    properties:
      context:
        allOf:
        - $ref: '#/definitions/decimal.Context'
        description: Context is the decimal's unique contextual object.
    type: object
  decimal.Condition:
    enum:
    - 1
    - 2
    - 4
    - 8
    - 16
    - 32
    - 64
    - 128
    - 256
    - 512
    - 1024
    - 2048
    - 4096
    type: integer
    x-enum-varnames:
    - Clamped
    - ConversionSyntax
    - DivisionByZero
    - DivisionImpossible
    - DivisionUndefined
    - Inexact
    - InsufficientStorage
    - InvalidContext
    - InvalidOperation
    - Overflow
    - Rounded
    - Subnormal
    - Underflow
  decimal.Context:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/decimal.Condition'
        description: |-
          Conditions are a set of the most recent exceptional conditions to occur
          during an operation.
      maxScale:
        description: |-
          MaxScale overrides the MaxScale constant so long as it's in the range
          (0, MaxScale].
        type: integer
      minScale:
        description: |-
          MinScale overrides the MaxScale constant so long as it's in the range
          [MinScale, 0).
        type: integer
      operatingMode:
        allOf:
        - $ref: '#/definitions/decimal.OperatingMode'
        description: |-
          OperatingMode which dictates how the decimal operates under certain
          conditions. See OperatingMode for more information.
      precision:
        description: |-
          Precision is the Context's precision; that is, the maximum number of
          significant digits that may result from any arithmetic operation.
          Excluding any package-defined constants (e.g., ``UnlimitedPrecision''),
          if precision is not in the range [1, MaxPrecision] operations might
          result in an error. A precision of 0 will be interpreted as
          DefaultPrecision. For example,

            precision ==  4 // 4
            precision == -4 // error
            precision ==  0 // DefaultPrecision
            precision == 12 // 12
        type: integer
      roundingMode:
        allOf:
        - $ref: '#/definitions/decimal.RoundingMode'
        description: RoundingMode determines how a decimal is rounded.
      traps:
        allOf:
        - $ref: '#/definitions/decimal.Condition'
        description: Traps are a set of exceptional conditions that should result
          in an error.
    type: object
  decimal.OperatingMode:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - GDA
    - Go
  decimal.RoundingMode:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    type: integer
    x-enum-comments:
      AwayFromZero: no IEEE 754-2008 equivalent
      ToNearestAway: == IEEE 754-2008 roundTiesToAway
      ToNearestEven: == IEEE 754-2008 roundTiesToEven
      ToNegativeInf: == IEEE 754-2008 roundTowardNegative
      ToPositiveInf: == IEEE 754-2008 roundTowardPositive
      ToZero: == IEEE 754-2008 roundTowardZero
      unnecessary: placeholder for x / y with UnlimitedPrecision.
    x-enum-varnames:
    - ToNearestEven
    - ToNearestAway
    - ToZero
    - AwayFromZero
    - ToNegativeInf
    - ToPositiveInf
    - unnecessary
  internal_controllers.APITransaction:
    properties:
      chainId:
        description: |-
          ChainID is the chain id of the chain on which the transaction took place. Important
          values are 137 for Polygon, 1 for Ethereum.
        example: 137
        type: integer
      description:
        description: Description is a short elaboration of the Type or a generic,
          e.g., "Incoming transfer" message.
        type: string
      from:
        description: From is the address of the source of the value, in 0x-prefixed
          hex.
        example: 0xf316832fbfe49f90df09eee019c2ece87fad3fac
        type: string
      time:
        description: Time is the timestamp of the block in which the transaction took
          place, in RFC-3999 format.
        example: "2023-01-22T09:00:12Z"
        type: string
      to:
        description: To is the address of the recipient of the value, in 0x-prefixed
          hex.
        example: 0xc66d80f5063677425270013136ef9fa2bf1f9f1a
        type: string
      type:
        description: Type is a transaction type.
        enum:
        - Baseline
        - Referrals
        - Marketplace
        type: string
      value:
        description: |-
          Value is the amount of token being transferred. Divide by 10^18 to get what people
          normally consider $DIMO.
        example: 10000000000000000
        type: number
    type: object
  internal_controllers.Balance:
    properties:
      balance:
        description: Balance is the total amount of $DIMO held at this time, across
          all chains.
        example: 2.3727721709254885e+20
        type: number
      time:
        description: Time is the block timestamp of this balance update.
        example: "2023-03-06T09:11:00Z"
        type: string
    type: object
  internal_controllers.BalanceHistory:
    properties:
      balanceHistory:
        items:
          $ref: '#/definitions/internal_controllers.Balance'
        type: array
    type: object
  internal_controllers.HistoricalConversionResponse:
    properties:
      points:
        description: Points is the number of points used to calculate the potential
          tokens.
        type: integer
      startOfWeek:
        description: StartOfWeek is the start of the week for the conversion.
        type: string
      tokens:
        allOf:
        - $ref: '#/definitions/decimal.Big'
        description: Tokens is the number of tokens ($DIMO/eth not wei) that would
          be earned for the given number of points.
    type: object
  internal_controllers.HistoryResponse:
    properties:
      weeks:
        items:
          $ref: '#/definitions/internal_controllers.HistoryResponseWeek'
        type: array
    type: object
  internal_controllers.HistoryResponseWeek:
    properties:
      end:
        description: End is the starting time of the issuance week after this one.
        example: "2022-04-18T05:00:00Z"
        type: string
      points:
        description: Points is the number of points the user earned this week.
        example: 4000
        type: integer
      start:
        description: Start is the starting time of the issuance week.
        example: "2022-04-11T05:00:00Z"
        type: string
      tokens:
        description: Tokens is the number of tokens the user earned this week.
        example: 4000
        type: number
    type: object
  internal_controllers.TransactionHistory:
    properties:
      transactions:
        items:
          $ref: '#/definitions/internal_controllers.APITransaction'
        type: array
    type: object
  internal_controllers.UserResponse:
    properties:
      devices:
        description: |-
          Devices is a list of the user's devices, together with some information about their
          connectivity.
        items:
          $ref: '#/definitions/internal_controllers.UserResponseDevice'
        type: array
      points:
        description: Points is the user's total number of points, across all devices
          and issuance weeks.
        example: 5000
        type: integer
      thisWeek:
        allOf:
        - $ref: '#/definitions/internal_controllers.UserResponseThisWeek'
        description: ThisWeek describes the current issuance week.
      tokens:
        description: |-
          Tokens is the number of tokens the user has earned, across all devices and issuance
          weeks.
        example: 1.105e+24
        type: number
      walletBalance:
        description: |-
          WalletBalance is the number of tokens held in the users's wallet, if he has a wallet
          attached to the present account.
        example: 1.105e+24
        type: number
    type: object
  internal_controllers.UserResponseDevice:
    properties:
      connectedThisWeek:
        description: |-
          ConnectedThisWeek is true if we've seen activity from the device during the current issuance
          week.
        example: true
        type: boolean
      connectionStreak:
        description: |-
          ConnectionStreak is what we consider the streak of the device to be. This may not literally
          be the number of consecutive connected weeks, because the user may disconnect for a week
          without penalty, or have the connection streak reduced after three weeks of inactivity.
        example: 4
        type: integer
      disconnectionStreak:
        description: |-
          DisconnectionStreak is the number of consecutive issuance weeks that the device has been
          disconnected. This number resets to 0 as soon as a device earns rewards for a certain week.
        example: 0
        type: integer
      id:
        description: ID is the user device ID used across all services.
        example: 27cv7gVTh9h4RJuTsmJHpBcr4I9
        type: string
      integrationsThisWeek:
        description: IntegrationsThisWeek details the integrations we've seen active
          this week.
        items:
          $ref: '#/definitions/internal_controllers.UserResponseIntegration'
        type: array
      lastActive:
        description: LastActive is the last time we saw activity from the vehicle.
        example: "2022-04-12T09:23:01Z"
        type: string
      level:
        allOf:
        - $ref: '#/definitions/internal_controllers.UserResponseLevel'
        description: Level is the level 1-4 of the device. This is fully determined
          by ConnectionStreak.
      minted:
        description: Minted is true if the device has been minted on-chain.
        type: boolean
      optedIn:
        description: OptedIn is true if the user has agreed to the terms of service.
        type: boolean
      points:
        description: Points is the total number of points that the device has earned
          across all weeks.
        example: 5000
        type: integer
      tokenId:
        description: TokenID is the NFT token id for minted vehicles.
        example: 37
        type: integer
      tokens:
        description: Tokens is the total number of tokens that the device has earned
          across all weeks.
        example: 5000
        type: number
      vinConfirmed:
        type: boolean
    type: object
  internal_controllers.UserResponseIntegration:
    properties:
      dataThisWeek:
        type: boolean
      id:
        description: ID is the integration ID.
        example: 27egBSLazAT7njT2VBjcISPIpiU
        type: string
      onChainPairingStatus:
        description: OnChainPairingStatus is the on-chain pairing status of the integration.
        enum:
        - Paired
        - Unpaired
        - NotApplicable
        example: Paired
        type: string
      points:
        description: |-
          Points is the number of points a user earns for being connected with this integration
          for a week.
        example: 1000
        type: integer
      vendor:
        description: |-
          Vendor is the name of the integration vendor. At present, this uniquely determines the
          integration.
        example: SmartCar
        type: string
    type: object
  internal_controllers.UserResponseLevel:
    properties:
      maxWeeks:
        description: MaxWeeks is the last streak week at this level. In the next week,
          we enter the next level.
        example: 20
        type: integer
      minWeeks:
        description: MinWeeks is the minimum streak of weeks needed to enter this
          level.
        example: 4
        type: integer
      number:
        description: Number is the level number 1-4
        example: 2
        type: integer
      streakPoints:
        description: StreakPoints is the number of points you earn per week at this
          level.
        example: 1000
        type: integer
    type: object
  internal_controllers.UserResponseThisWeek:
    properties:
      end:
        description: End is the timestamp of the start of the next issuance week.
        example: "2022-04-18T05:00:00Z"
        type: string
      start:
        description: Start is the timestamp of the start of the issuance week.
        example: "2022-04-11T05:00:00Z"
        type: string
    type: object
info:
  contact: {}
  title: DIMO Rewards API
  version: "1.0"
paths:
  /rewards/convert:
    get:
      description: Calculate DIMO token earned fo a given week and popints
      parameters:
      - description: Number of points
        in: query
        name: points
        required: true
        type: integer
      - description: Time in the week to calculate potential tokens earned based on
          the provided points (defaults to last week) (format RFC-3339 e.x. 2024-12-23T12:41:42Z)
        in: query
        name: time
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.HistoricalConversionResponse'
  /user:
    get:
      description: A summary of the user's rewards.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.UserResponse'
      security:
      - BearerAuth: []
  /user/history:
    get:
      description: A summary of the user's rewards for past weeks.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.HistoryResponse'
      security:
      - BearerAuth: []
  /user/history/balance:
    get:
      description: A summary of the user's DIMO balance across all chains.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.BalanceHistory'
      security:
      - BearerAuth: []
  /user/history/transactions:
    get:
      description: A summary of the user's DIMO transaction history, all time.
      parameters:
      - description: A label for a transaction type.
        enum:
        - Baseline
        - Referrals
        - Marketplace
        - Other
        in: query
        name: type
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.TransactionHistory'
      security:
      - BearerAuth: []
  /user/referrals:
    get:
      description: A summary of the user's referrals.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.UserResponse'
      security:
      - BearerAuth: []
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
